# ============================================================================
# Super Agent Framework - Environment Configuration
# ============================================================================
# Copy this file to .env and update with your values
#
# Quick Start (SQLite - No database server needed!):
#   cp .env.example .env
#   python scripts/init_db.py  # Initialize database
#   uvicorn main:app --reload  # Start server
# ============================================================================

# ----------------------------------------------------------------------------
# Environment
# ----------------------------------------------------------------------------
ENVIRONMENT=development  # development, staging, production
DEBUG=true

# ----------------------------------------------------------------------------
# Database
# ----------------------------------------------------------------------------
# Option 1: SQLite (DEFAULT - No server needed! Perfect for dev/small deployments)
DATABASE_URL=sqlite:///./super_agent.db

# Option 2: PostgreSQL (Production - Uncomment and configure)
# DATABASE_URL=postgresql://postgres:postgres@localhost:5432/super_agent_dev

# Option 3: PostgreSQL Production Example
# DATABASE_URL=postgresql://username:password@prod-db-host:5432/super_agent_prod

# Connection pool settings (mainly for PostgreSQL)
DATABASE_POOL_SIZE=5
DATABASE_MAX_OVERFLOW=10

# ----------------------------------------------------------------------------
# Redis (Optional - for Celery task queue and caching in Phase 2)
# ----------------------------------------------------------------------------
# REDIS_URL=redis://localhost:6379/0

# ----------------------------------------------------------------------------
# Authentication & Security
# ----------------------------------------------------------------------------
# ‚ö†Ô∏è  IMPORTANT: Change SECRET_KEY in production!
# Generate new key: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7

# Token expiration
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# ----------------------------------------------------------------------------
# Feature Flags
# ----------------------------------------------------------------------------
# Set to false to disable features (useful for development)
ENABLE_AUTH=true
ENABLE_MULTI_TENANCY=true
ENABLE_AUDIT_LOGGING=true

# ----------------------------------------------------------------------------
# Secrets Vault (Optional - HashiCorp Vault)
# ----------------------------------------------------------------------------
# VAULT_URL=http://localhost:8200
# VAULT_TOKEN=your-vault-token
# VAULT_ENABLED=false

# ----------------------------------------------------------------------------
# LLM API Keys (Optional - for actual AI features)
# ----------------------------------------------------------------------------
# OPENAI_API_KEY=sk-...
# ANTHROPIC_API_KEY=sk-ant-...

# ----------------------------------------------------------------------------
# Monitoring & Error Tracking (Optional)
# ----------------------------------------------------------------------------
# SENTRY_DSN=https://...@sentry.io/...
# SENTRY_ENABLED=false

# ----------------------------------------------------------------------------
# Resource Limits
# ----------------------------------------------------------------------------
MAX_WORKFLOW_EXECUTIONS_PER_HOUR=100
MAX_AGENTS_PER_WORKFLOW=50

# ============================================================================
# NOTES
# ============================================================================
#
# üöÄ SUPER QUICK SETUP (SQLite - Recommended for development):
# 1. Copy this file: cp .env.example .env
# 2. Initialize database: python backend/scripts/init_db.py
# 3. Start backend: cd backend && uvicorn main:app --reload
# 4. Done! Database is stored in super_agent.db file
#
# No PostgreSQL, no Redis, no complex setup required! ‚ú®
#
# üìà PostgreSQL Setup (Optional - for production):
# 1. Install PostgreSQL: brew install postgresql (Mac) or apt install postgresql (Linux)
# 2. Start PostgreSQL: brew services start postgresql (Mac)
# 3. Create database: createdb super_agent_dev
# 4. Update DATABASE_URL above to use postgresql://
# 5. Initialize database: python backend/scripts/init_db.py
# 6. Start backend: cd backend && uvicorn main:app --reload
#
# Quick Setup for Testing (No Auth):
# Set ENABLE_AUTH=false to bypass authentication during development
#
# Demo Users (after running init_db.py):
# - admin@acme.com / admin123 (Admin - Full access)
# - dev@acme.com / dev123 (Developer - Create/edit workflows)
# - ops@acme.com / ops123 (Operator - Execute workflows)
# - sales@acme.com / sales123 (Sales Developer)
#
# Database Files:
# - SQLite: super_agent.db (in backend directory)
# - To reset: Delete super_agent.db and run init_db.py again
#
# ============================================================================
